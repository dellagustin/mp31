#############################################################################
# Makefile for building ./BIN/mp31
# Generated by tmake at 19:05, 2000/01/06
#     Project: hmpp
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	gcc
CXX	=	g++
CFLAGS	=	-O6 -pedantic -mpentiumpro -DINTELSWP -DUNIXPATH -DLINUX -malign-double -fomit-frame-pointer -Wall -W
CXXFLAGS=	-pipe -Wall -W
INCPATH	=	-I.
LINK	=	gcc
LFLAGS	=	-s
LIBS	=	-lm
MOC	=	moc

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	asciitab.h \
		formulc.h \
		gif_hash.h \
		gif_lib.h \
		iobook.h \
		proto.h \
		rand2d.h \
		shell.h \
		typdef.h \
		wigmap.h \
		new_io.h
SOURCES =	egif_lib.c \
		fft.c \
		formulc.c \
		gif_err.c \
		gif_hash.c \
		iobook.c \
		iosignal.c \
		main.c \
		mceeg.c \
		mp.c \
		new_io.c \
		rand2d.c \
		shell.c \
		sourtime.c \
		utils.c \
		wig2gif.c \
		wigmap.c \
		wigmapps.c
OBJECTS =	./OBJ/egif_lib.o \
		./OBJ/fft.o \
		./OBJ/formulc.o \
		./OBJ/gif_err.o \
		./OBJ/gif_hash.o \
		./OBJ/iobook.o \
		./OBJ/iosignal.o \
		./OBJ/main.o \
		./OBJ/mceeg.o \
		./OBJ/mp.o \
		./OBJ/new_io.o \
		./OBJ/rand2d.o \
		./OBJ/shell.o \
		./OBJ/sourtime.o \
		./OBJ/utils.o \
		./OBJ/wig2gif.o \
		./OBJ/wigmap.o \
		./OBJ/wigmapps.o
SRCMOC	=	
OBJMOC	=	
DIST	=	./SCRIPT/* \
		./OBJ/dummy \
		./BIN/TimeFreq.jar \
		Makefile \
		hmpp.pro \
		compile
TARGET	=	./BIN/mp31

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: $(TARGET)

$(TARGET): $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: hmpp.pro
	tmake hmpp.pro -o Makefile

dist:
	$(TAR) hmpp.tar hmpp.pro $(SOURCES) $(HEADERS) $(DIST)
	$(GZIP) hmpp.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(TARGET)
	-rm -f *~ core

####### Compile

./OBJ/egif_lib.o: egif_lib.c \
		gif_lib.h \
		gif_hash.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/egif_lib.o egif_lib.c

./OBJ/fft.o: fft.c \
		shell.h \
		proto.h \
		typdef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/fft.o fft.c

./OBJ/formulc.o: formulc.c \
		proto.h \
		typdef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/formulc.o formulc.c

./OBJ/gif_err.o: gif_err.c \
		gif_lib.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/gif_err.o gif_err.c

./OBJ/gif_hash.o: gif_hash.c \
		gif_lib.h \
		gif_hash.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/gif_hash.o gif_hash.c

./OBJ/iobook.o: iobook.c \
		iobook.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/iobook.o iobook.c

./OBJ/iosignal.o: iosignal.c \
		shell.h \
		typdef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/iosignal.o iosignal.c

./OBJ/main.o: main.c \
		shell.h \
		iobook.h \
		new_io.h \
		proto.h \
		typdef.h \
		rand2d.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/main.o main.c

./OBJ/mceeg.o: mceeg.c \
		proto.h \
		typdef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/mceeg.o mceeg.c

./OBJ/mp.o: mp.c \
		iobook.h \
		rand2d.h \
		formulc.h \
		proto.h \
		typdef.h \
		shell.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/mp.o mp.c

./OBJ/new_io.o: new_io.c \
		proto.h \
		typdef.h \
		new_io.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/new_io.o new_io.c

./OBJ/rand2d.o: rand2d.c \
		rand2d.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/rand2d.o rand2d.c

./OBJ/shell.o: shell.c \
		shell.h \
		proto.h \
		typdef.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/shell.o shell.c

./OBJ/sourtime.o: sourtime.c
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/sourtime.o sourtime.c

./OBJ/utils.o: utils.c \
		new_io.h \
		rand2d.h \
		shell.h \
		iobook.h \
		typdef.h \
		proto.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/utils.o utils.c

./OBJ/wig2gif.o: wig2gif.c \
		gif_lib.h \
		typdef.h \
		asciitab.h \
		shell.h \
		wigmap.h \
		iobook.h \
		new_io.h \
		proto.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/wig2gif.o wig2gif.c

./OBJ/wigmap.o: wigmap.c \
		wigmap.h \
		typdef.h \
		proto.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/wigmap.o wigmap.c

./OBJ/wigmapps.o: wigmapps.c \
		wigmap.h \
		typdef.h \
		shell.h \
		proto.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ./OBJ/wigmapps.o wigmapps.c

